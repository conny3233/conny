# 📌문제설명
# 오늘  동빈이는  여행  가신  부모님을  대신해서  떡집  일을  하기로  했다. 오늘은  떡볶이  떡을  만드는  날이다. 
# 동빈이네  떡볶이  떡은  재밌게도  떡볶이  떡의  길이가  일정하지  않다.
#  대신에  한  봉지  안에  들어가는  떡의  총  길 이는  절단기로  잘라서  맞춰준다.
# 절단기에  높이 H를  지정하면  줄지어진  떡을  한  번에  절단한다. 
# 높이가 H보다  긴  떡은 H 위의  부분이  잘릴  것이 고, 낮은  떡은  잘리지  않는다.
# 📌입력
# 첫째  줄에  떡의  개수 N과  요청한  떡의  길이 M이  주어진다. (1 <= N <= 1000000, 1 <= M <= 2000000000) 
# 둘째  줄에는  떡의  개별  높이가  주어진다. 떡  높이의  총합은  항상 M 이상이므로, 손님은  필요한  양만큼  떡을  사 갈  수  있다.
#  높이는 10억보다  작거나  같은  양의  정수  또는 0이다.
# 📌출력
# 적어도 M만큼의  떡을  집에  가져가기  위해  절단기에  설정할  수  있는  높이의  최댓값을  출력한다.

N, M = map(int, input().split())
dduck = list(map(int, input().split()))

def cut_sum(H):
    return sum(max(0, h - H) for h in dduck)

lo, hi = 0, max(dduck)
ans = 0

while lo <= hi:
    mid = (lo + hi) // 2
    total = cut_sum(mid)

    if total >= M:
        ans = mid        
        lo = mid + 1     
    else:
        hi = mid - 1     

print(ans)








