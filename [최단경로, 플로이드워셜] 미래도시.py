# 📌문제설명
# 미래  도시에는 1번부터 N번까지의  회사가  있는데  특정  회사끼리는  서로  도로를  통해  연결되어  있다. 
# 방문  판매 원 A는  현재 1번  회사에  위치해  있으며, X번  회사에  방문해  물건을  판매하고자  한다.
# 공중  미래  도시에서  특정  회사에  도달하기  위한  방법은  회사끼리  연결되어  있는  도로를  이용하는  방법이  유일 하다. 
# 또한  연결된 2개의  회사는  양방향으로  이동할  수  있다.
# 공중  미래  도시에서의  도로는  마하의  속도로  사람을  이동시킬  수  있을  정도로  빠르기  
# 때문에  방문  판매원 A는 X번  회사에  반드시  가야  한다.
# A는  이동시간을  최적화하려고  한다. 
# 📌입력
# 첫째  줄에  회사의  수 N과  도로의  수 M이  주어진다. (2 <= N <= 100, 1 <= M <= 1000)
# 둘째  줄부터 M+1 번째  줄에는  도로  연결  정보를  나타내는  두  정수 a, b가  주어진다.
#  이는 a번  회사와 b번  회사 가  도로로  연결되어  있다는  뜻이다.
# 마지막  줄에는 A가  방문해야  할  회사  번호 X와, 그  다음에 A의  회사가  방문해야  할  또  다른  회사  번호 K가  주어 진다.
# 도로가  양방향으로  연결된  것이므로 a에서 b로  가는  것과 b에서 a로  가는  것은  동일하다.
#  📌출력
# 첫  번째  줄에  방문  판매원이 X번  회사에  도달한  뒤, K번  회사로  가는  최소  이동  시간을  출력한다. 
# 만약 X번  회사와 K번  회사  사이에  이동할  수  없다면 -1을  출력한다.

N, M = map(int,input().split())
INF = int(1e9)

graph = [[INF] * (N+1) for _ in range(N+1)]

for a in range(1,N+1):
    for b in range(1,N+1):
        if a == b:
            graph[a][b]=0

for c in range(M):
    a,b = map(int,input().split())
    graph[a][b]=1
    graph[b][a]=1

for k in range(1,N+1):
    for a in range(1,N+1):
        for b in range(1,N+1):
            graph[a][b]=min(graph[a][b],graph[a][k]+graph[k][b])

X, K = map(int,input().split())

if graph[X][K] == INF:
    print("-1")
    
else:
    print(graph[1][X]+graph[X][K]+1)