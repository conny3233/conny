# 📌  문제설명
# 동빈이는  두  개의  배열 A와 B를  가지고  있다. 두  배열은 N개의  원소로  구성되어  있으며, 배열의  원소는  모두  자연수이다.
# 동빈이는  최대 K 번의  바꿔치기  연산을  수행할  수  있는데, 바꿔치기  연산이란  배열 A에  있는  원소  하나와  배열 B에  있는  
# 원소  하나를  골라서  두  원소를  서로  바꾸는  것을  말한다.
# 동빈이의  최종  목표는  배열 A의  모든  원소의  합이  최대가  되도록  하는  것이며, 여러분은  동빈이를  도와야한다. 
# 📌입력
# 첫  번째  줄: N, K 가  공백으로  구분되어  입력 (1 <= N <= 100,000, 0 <= K <= N) 
# 두  번째  줄: 배열 A의  원소들이  공백으로  구분되어  입력 (원소 a < 10,000,000인  자연수) 
# 세  번째  줄: 배열 B의  원소들이  공백으로  구분되어  입력 (원소 b < 10,000,000인  자연수)
# 📌출력
# 최대 K번  바꿔치기  연산을  수행해서  가장  최대의  합을  갖는 A의  모든  원소  값의  합을  출력

n, k = map(int, input().split())
A = list(map(int, input().split()))
B = list(map(int, input().split()))

A.sort()
print("\n배열 A(오름차순): {0}".format(A))
B.sort(reverse=True)
print("배열 B(내림차순): {0}\n".format(B))

for i in range(k):
    if A[i] < B[i]:
        A[i], B[i] = B[i], A[i]  
    else:
        break   

A.sort()
print("바꿔치기 된 배열 A: {0}\n".format(A))
print("배열 A의 모든 원소 값의 합: {0}".format(sum(A)))